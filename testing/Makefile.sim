## To be included in other makefiles, pass arguments via
## setting scan_params and set files by setting BSG_*_FILES

export TOP = $(abspath ../../..)

## Environment Setup


SIMULATOR ?= vcs

ifeq ($(SIMULATOR),vcs)
##########
# settings for Synopsys VCS 
BSG_IP_CORES_COMP = vcs -full64 -sverilog -timescale=1ps/1ps
BSG_IP_CORES_ELAB = /usr/bin/true || 
BSG_IP_CORES_SIM = ./simv

BSG_IP_CORES_SIM_DEFINE_PARAM = +define+
BSG_IP_CORES_SIM_INCLUDE_DIRS = +incdir+$(TOP)/bsg_test +incdir+$(TOP)/bsg_misc +incdir+$(TOP)/bsg_dataflow
BSG_IP_CORES_SIM_CLEAN_FILES  = simv*
#
##########
else
##########
# settings for Xilinx Vivado
BSG_IP_CORES_COMP = xvlog --sv
BSG_IP_CORES_ELAB = xelab -debug typical -s top_sim -timescale=1ps/1ps
BSG_IP_CORES_SIM  = xsim --runall top_sim

BSG_IP_CORES_SIM_DEFINE_PARAM = -d@
BSG_IP_CORES_SIM_INCLUDE_DIRS = -I$(TOP)/bsg_test -I$(TOP)/bsg_misc -I$(TOP)/bsg_dataflow -I$(TOP)/bsg_tag
BSG_IP_CORES_SIM_CLEAN_FILES = xvlog* xelab* webtalk* xsim* *.wdb .Xil *.vpd csrc/ simv.daidir/ ucli.key
#
##########
endif

ALL_FILES = $(foreach x,$(BSG_MISC_FILES),$(TOP)/bsg_misc/$(x))     \
              $(foreach x,$(BSG_ASYNC_FILES),$(TOP)/bsg_async/$(x)) \
              $(foreach x,$(BSG_NOC_FILES),$(TOP)/bsg_noc/$(x)) \
              $(foreach x,$(BSG_FSB_FILES),$(TOP)/bsg_legacy/bsg_fsb/$(x))     \
              $(foreach x,$(BSG_MEM_FILES),$(TOP)/bsg_mem/$(x))     \
              $(foreach x,$(BSG_GUTS_FILES),$(TOP)/bsg_guts/$(x))   \
              $(foreach x,$(BSG_COMM_LINK_FILES),$(TOP)/bsg_comm_link/$(x)) \
              $(foreach x,$(BSG_DATAFLOW_FILES),$(TOP)/bsg_dataflow/$(x))   \
              $(foreach x,$(ADDITIONAL_FILES),./$(x))                       \
              $(foreach x,$(BSG_TEST_FILES),$(TOP)/bsg_test/$(x))           \
              $(foreach x,$(BSG_TAG_FILES),$(TOP)/bsg_tag/$(x))           \
              $(foreach x,$(BSG_TESTME_FILES),$(BSG_TESTME_DIR)/$(x))       \
              $(PWD)/$(TEST_MAIN) \
              $(CXX_FILES)

# function that generates a string for each combination of the parameters;
# spaces separated by "@" signs.
bsg_param_scan = $(if $(1),$(foreach v__,$($(firstword $(1))),\
                    $(call bsg_param_scan,$(filter-out $(firstword $(1)),\
                    $(1)),$(2),$(3),$(4)@$(2)$(firstword $(1))$(3)$(v__))),\
                    $(4))

# this takes the parameters and creates a set of make targets, one for every
# combination of the parameters
commands = $(call bsg_param_scan,$(scan_params),$(BSG_IP_CORES_SIM_DEFINE_PARAM),=)


# default rule: run all of the targets.
all: clean $(foreach x,$(commands),run.$(x))

# this runs an individual target
# we replace the @ with a space so that the parameters are used as
# command line options

run.%:
	rm -rf obj_dir
	rm -f ./rtl_sv.include
	$(foreach f,$(ALL_FILES),echo $(f) >> ./rtl_sv.include;)
	verilator --cc --build  --exe \
	-I$(TOP)/bsg_test -I$(TOP)/bsg_misc -I$(TOP)/bsg_dataflow  -I$(TOP)/bsg_noc -f ./rtl_sv.include \
    --top test_bsg --timescale 1ns/1ns \
    -Wno-lint -Wno-MULTITOP -Wno-MULTIDRIVEN -Wno-UNOPTFLAT -Wno-WIDTHCONCAT -Wno-REDEFMACRO \
    $(subst @, ,$*)
	@executable=$$(find ./obj_dir -maxdepth 1 -type f -perm /u+x | head -n 1); \
    if [ -n "$$executable" ]; then \
        $$executable; \
    else \
        echo "No executable found in ./obj_dir"; \
    fi
clean:
	@echo removing outfile
	rm -f outfile output.log
	rm -rf $(BSG_IP_CORES_SIM_CLEAN_FILES)
